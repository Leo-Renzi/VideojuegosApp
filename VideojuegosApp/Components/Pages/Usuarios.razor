@page "/usuarios"
@inject VideojuegosApp.Services.UsuarioService usuarioService
@inject VideojuegosApp.Services.SessionService Session
@inject NavigationManager Nav
@inject IJSRuntime JS

@if (!Session.IsLoggedIn)
{
    <div class="container text-center mt-5">
        <div class="alert alert-warning">No has iniciado sesión.</div>
        <a class="btn btn-primary" href="/">Ir al login</a>
    </div>
}
else
{
    <div class="container my-5">
        <div class="card shadow-lg p-4 mx-auto" style="max-width: 1000px;">
            <div class="d-flex flex-wrap justify-content-between align-items-center gap-2">
                <div>
                    <h2 class="mb-0"><i class="bi bi-people"></i> Usuarios</h2>
                    <small class="text-muted">Gestiona los usuarios del sistema.</small>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-success" disabled>
                        <i class="bi bi-plus-circle"></i> Añadir Usuario
                    </button>
                    <button class="btn btn-outline-secondary" @onclick='() => Nav.NavigateTo("/menuprincipal")'>
                        <i class="bi bi-arrow-left"></i> Volver
                    </button>
                </div>
            </div>

            <hr class="my-3" />

            <div class="table-responsive shadow-sm">
                <table class="table table-striped table-hover align-middle mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th style="width:120px;">Imagen</th>
                            <th>Nombre</th>
                            <th>Email</th>
                            <th style="width:110px;">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var u in usuarioService.GetUsuarios())
                        {
                            <tr>
                                <td class="text-center">
                                    <img src="@u.Imagen" alt="Foto" width="70" class="rounded-circle shadow-sm" />
                                </td>
                                <td>@u.NombreUsuario</td>
                                <td>@u.Email</td>
                                <td class="text-center">
                                    <button class="btn btn-danger btn-sm"
                                            title="Eliminar"
                                            @onclick="() => ConfirmDelete(u.Id, u.NombreUsuario)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal de confirmación -->
    <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Eliminar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    ¿Seguro que deseas eliminar a <b>@usuarioSeleccionadoNombre</b>?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" @onclick="DeleteUsuario">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private int usuarioSeleccionadoId;
    private string usuarioSeleccionadoNombre = string.Empty;

    private void ConfirmDelete(int id, string nombre)
    {
        usuarioSeleccionadoId = id;
        usuarioSeleccionadoNombre = nombre;
        JS.InvokeVoidAsync("bootstrapModalShow", "#deleteUserModal");
    }

    private void DeleteUsuario()
    {
        usuarioService.Delete(usuarioSeleccionadoId);
        JS.InvokeVoidAsync("bootstrapModalHide", "#deleteUserModal");
        StateHasChanged();
    }
}
